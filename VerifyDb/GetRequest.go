// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package VerifyDb

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type GetRequest struct {
	_tab flatbuffers.Table
}

func GetRootAsGetRequest(buf []byte, offset flatbuffers.UOffsetT) *GetRequest {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &GetRequest{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsGetRequest(buf []byte, offset flatbuffers.UOffsetT) *GetRequest {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &GetRequest{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *GetRequest) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *GetRequest) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *GetRequest) Entry(obj *Entry) *Entry {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(Entry)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *GetRequest) MatchField(j int) Field {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return Field(rcv._tab.GetInt8(a + flatbuffers.UOffsetT(j*1)))
	}
	return 0
}

func (rcv *GetRequest) MatchFieldLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *GetRequest) MutateMatchField(j int, n Field) bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.MutateInt8(a+flatbuffers.UOffsetT(j*1), int8(n))
	}
	return false
}

func GetRequestStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func GetRequestAddEntry(builder *flatbuffers.Builder, entry flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(entry), 0)
}
func GetRequestAddMatchField(builder *flatbuffers.Builder, matchField flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(matchField), 0)
}
func GetRequestStartMatchFieldVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(1, numElems, 1)
}
func GetRequestEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
